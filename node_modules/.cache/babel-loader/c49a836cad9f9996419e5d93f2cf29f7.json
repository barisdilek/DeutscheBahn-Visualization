{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Baris Dilek\\\\Desktop\\\\db\\\\visualization\\\\src\\\\components\\\\Image.jsx\";\nimport React, { Component } from 'react';\nimport infrastructure from '../data/infrastructure.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Image extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: infrastructure\n    };\n  }\n\n  getData() {\n    this.setState({\n      data: infrastructure\n    });\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  SetPathId(i) {\n    var nodes = this.state.data.tracks[i].nodes;\n    return \"line\" + nodes[0] + nodes[1];\n  }\n\n  SetCircleId(i) {\n    return \"point\" + i;\n  }\n\n  SetPoints(i) {\n    var nodes = this.state.data.tracks[i].nodes;\n    let pA = this.state.data.nodes[nodes[0]];\n    let pB = this.state.data.nodes[nodes[1]];\n    let pABDifX = (pA.x - pB.x) * -1;\n    let pBBDifY = (pA.y - pB.y) * -1;\n    return `M  ${pA.x} ${pA.y} l ${pABDifX} ${pBBDifY}`;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: \"-540 -128 1080 256\",\n      children: [Object.keys(this.state.data.tracks).map(i => /*#__PURE__*/_jsxDEV(\"path\", {\n        id: this.SetPathId(i),\n        d: this.SetPoints(i),\n        stroke: \"black\",\n        strokeWidth: \"2\",\n        fill: \"none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"g\", {\n        stroke: \"black\",\n        strokeWidth: \"2\",\n        fill: \"blue\",\n        children: Object.keys(this.state.data.nodes).map(i => /*#__PURE__*/_jsxDEV(\"circle\", {\n          id: this.SetCircleId(i),\n          cx: this.state.data.nodes[i].x,\n          cy: this.state.data.nodes[i].y,\n          r: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default Image;","map":{"version":3,"sources":["C:/Users/Baris Dilek/Desktop/db/visualization/src/components/Image.jsx"],"names":["React","Component","infrastructure","Image","state","data","getData","setState","componentDidMount","SetPathId","i","nodes","tracks","SetCircleId","SetPoints","pA","pB","pABDifX","x","pBBDifY","y","render","Object","keys","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;AAEA,OAAO,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;AAAA,SAEnCG,KAFmC,GAE3B;AACNC,MAAAA,IAAI,EAAEH;AADA,KAF2B;AAAA;;AAMnCI,EAAAA,OAAO,GAAG;AACR,SAAKC,QAAL,CAAc;AAACF,MAAAA,IAAI,EAAGH;AAAR,KAAd;AACD;;AAEDM,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,OAAL;AACD;;AACDG,EAAAA,SAAS,CAACC,CAAD,EAAI;AACX,QAAIC,KAAK,GAAG,KAAKP,KAAL,CAAWC,IAAX,CAAgBO,MAAhB,CAAuBF,CAAvB,EAA0BC,KAAtC;AACA,WAAO,SAAQA,KAAK,CAAC,CAAD,CAAb,GAAmBA,KAAK,CAAC,CAAD,CAA/B;AACD;;AACDE,EAAAA,WAAW,CAACH,CAAD,EAAI;AACb,WAAO,UAASA,CAAhB;AACD;;AACDI,EAAAA,SAAS,CAACJ,CAAD,EAAI;AACX,QAAIC,KAAK,GAAG,KAAKP,KAAL,CAAWC,IAAX,CAAgBO,MAAhB,CAAuBF,CAAvB,EAA0BC,KAAtC;AACA,QAAII,EAAE,GAAG,KAAKX,KAAL,CAAWC,IAAX,CAAgBM,KAAhB,CAAsBA,KAAK,CAAC,CAAD,CAA3B,CAAT;AACA,QAAIK,EAAE,GAAG,KAAKZ,KAAL,CAAWC,IAAX,CAAgBM,KAAhB,CAAsBA,KAAK,CAAC,CAAD,CAA3B,CAAT;AAEA,QAAIM,OAAO,GAAG,CAACF,EAAE,CAACG,CAAH,GAAOF,EAAE,CAACE,CAAX,IAAgB,CAAC,CAA/B;AACA,QAAIC,OAAO,GAAG,CAACJ,EAAE,CAACK,CAAH,GAAOJ,EAAE,CAACI,CAAX,IAAgB,CAAC,CAA/B;AAEA,WAAQ,MAAKL,EAAE,CAACG,CAAE,IAAGH,EAAE,CAACK,CAAE,MAAKH,OAAQ,IAAGE,OAAQ,EAAlD;AACD;;AAGDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,OAAO,EAAC,oBAAd;AAAA,iBACGC,MAAM,CAACC,IAAP,CAAY,KAAKnB,KAAL,CAAWC,IAAX,CAAgBO,MAA5B,EAAoCY,GAApC,CAAyCd,CAAD,iBACvC;AAAM,QAAA,EAAE,EAAE,KAAKD,SAAL,CAAeC,CAAf,CAAV;AAA6B,QAAA,CAAC,EAAE,KAAKI,SAAL,CAAeJ,CAAf,CAAhC;AAAmD,QAAA,MAAM,EAAC,OAA1D;AAAkE,QAAA,WAAW,EAAC,GAA9E;AAAkF,QAAA,IAAI,EAAC;AAAvF;AAAA;AAAA;AAAA;AAAA,cADD,CADH,eAIE;AAAG,QAAA,MAAM,EAAC,OAAV;AAAkB,QAAA,WAAW,EAAC,GAA9B;AAAkC,QAAA,IAAI,EAAC,MAAvC;AAAA,kBACCY,MAAM,CAACC,IAAP,CAAY,KAAKnB,KAAL,CAAWC,IAAX,CAAgBM,KAA5B,EAAmCa,GAAnC,CAAwCd,CAAD,iBACtC;AAAQ,UAAA,EAAE,EAAE,KAAKG,WAAL,CAAiBH,CAAjB,CAAZ;AAAiC,UAAA,EAAE,EAAE,KAAKN,KAAL,CAAWC,IAAX,CAAgBM,KAAhB,CAAsBD,CAAtB,EAAyBQ,CAA9D;AAAiE,UAAA,EAAE,EAAE,KAAKd,KAAL,CAAWC,IAAX,CAAgBM,KAAhB,CAAsBD,CAAtB,EAAyBU,CAA9F;AAAiG,UAAA,CAAC,EAAC;AAAnG;AAAA;AAAA;AAAA;AAAA,gBADD;AADD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAlDkC;AAqDrC,eAAejB,KAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport infrastructure from '../data/infrastructure.json';\r\n\r\nexport class Image extends Component {\r\n\r\n  state = {\r\n    data: infrastructure\r\n  }\r\n\r\n  getData() {\r\n    this.setState({data : infrastructure})\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n  SetPathId(i) {\r\n    var nodes = this.state.data.tracks[i].nodes\r\n    return \"line\"+ nodes[0] + nodes[1];\r\n  }\r\n  SetCircleId(i) {\r\n    return \"point\"+ i;\r\n  }\r\n  SetPoints(i) {\r\n    var nodes = this.state.data.tracks[i].nodes\r\n    let pA = this.state.data.nodes[nodes[0]];\r\n    let pB = this.state.data.nodes[nodes[1]];\r\n\r\n    let pABDifX = (pA.x - pB.x) * -1;\r\n    let pBBDifY = (pA.y - pB.y) * -1;\r\n\r\n    return `M  ${pA.x} ${pA.y} l ${pABDifX} ${pBBDifY}`;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <svg  viewBox=\"-540 -128 1080 256\" >\r\n        {Object.keys(this.state.data.tracks).map((i) => (\r\n          <path id={this.SetPathId(i)} d={this.SetPoints(i)} stroke=\"black\" strokeWidth=\"2\" fill=\"none\" />\r\n        ))}\r\n        <g stroke=\"black\" strokeWidth=\"2\" fill=\"blue\">\r\n        {Object.keys(this.state.data.nodes).map((i) => (\r\n          <circle id={this.SetCircleId(i)} cx={this.state.data.nodes[i].x} cy={this.state.data.nodes[i].y} r=\"4\" />\r\n        ))}\r\n        </g>\r\n        {/* <g fontSize=\"22\" fontFamily=\"sans-serif\" fill=\"black\" stroke=\"none\" text-anchor=\"middle\">\r\n        {Object.keys(this.state.data.nodes).map((i) => (\r\n          <text x={this.state.data.nodes[i].x} y={this.state.data.nodes[i].y} dy=\"40\">{i}</text>\r\n        ))}\r\n        </g> */}\r\n      </svg>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Image;\r\n"]},"metadata":{},"sourceType":"module"}